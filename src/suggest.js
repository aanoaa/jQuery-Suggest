// Generated by CoffeeScript 1.3.1
(function() {

  $.fn.extend({
    suggest: function(data, settings) {
      return this.each(function() {
        var $this, self;
        $this = $(this);
        self = $.suggest;
        $.data(this, 'suggestions', data);
        if (settings) {
          $.extend(self.settings, settings);
        }
        $this.on('focus.suggest', function() {
          return $(document).on('keyup.suggest', {
            msg: this
          }, self.keyup);
        });
        return $this.on('focusout.suggest', function() {
          $.suggest.clear();
          return $(document).off('keyup.suggest');
        });
      });
    }
  });

  $.extend($.suggest = {}, {
    settings: {
      css: {
        position: 'absolute',
        margin: 0,
        padding: '3px 0',
        listStyleType: 'none',
        color: '#555',
        'z-index': 9999
      }
    },
    keyup: function(e) {
      var $el, list, suggested;
      $el = $(e.data.msg);
      switch (e.keyCode) {
        case 9:
        case 13:
          return console.log("" + e.keyCode);
        case 27:
          return console.log("" + e.keyCode);
        default:
          list = $.data($el.get(0), 'suggestions');
          suggested = $.suggest.matching($el.get(0), list);
          if (suggested.length === 0 || suggested.length === list.length) {
            return $.suggest.clear();
          } else {
            return $.suggest.show($el.get(0), suggested);
          }
      }
    },
    clear: function() {
      return $('#jquery-suggest').each(function() {
        return $(this).remove();
      });
    },
    matching: function(el, list) {
      var re;
      re = new RegExp($(el).val());
      return $.grep(list, function(word, i) {
        return re.test(word);
      });
    },
    show: function(el, items) {
      var $el, $em, $ul, index, item, offset, v, _i, _len;
      $.suggest.clear();
      $el = $(el);
      offset = $el.offset();
      $ul = $('<ul id="jquery-suggest" />').css($.extend({
        top: offset.top + $el.height() + 7,
        left: offset.left
      }, $.suggest.settings.css));
      v = $el.val();
      for (_i = 0, _len = items.length; _i < _len; _i++) {
        item = items[_i];
        index = item.indexOf(v);
        $em = $("<em>" + v + "</em>").css({
          color: '#000',
          'font-style': 'normal',
          'font-weight': 'bold'
        });
        $("<li></li>").append("" + (item.slice(0, item.indexOf(v)))).append($em).append("" + (item.slice(index + v.length))).appendTo($ul);
      }
      return $('body').append($ul);
    }
  });

}).call(this);
